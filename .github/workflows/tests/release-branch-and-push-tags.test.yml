name: Test - Release Branch and Push Tags

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/release-branch-and-push-tags.yml'
      - '.github/workflows/scripts/release-branch-and-push-tags.sh'
      - '.github/workflows/tests/release-branch-and-push-tags.test.yml'

jobs:
  test-find-prepare-release-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 100

      - name: Create test commit history
        run: |
          git config --global user.name "Test User"
          git config --global user.email "test@example.com"
          
          # Create a temporary branch for testing
          git checkout -b test-release-branch
          
          # Create a test commit with "Prepare release" in the message
          echo "test file" > test_prepare_release.txt
          git add test_prepare_release.txt
          git commit -m "Prepare release v0.99.0"
          PREPARE_RELEASE_COMMIT=$(git rev-parse HEAD)
          echo "PREPARE_RELEASE_COMMIT=$PREPARE_RELEASE_COMMIT" >> $GITHUB_ENV
          
          # Create another commit
          echo "another test file" > another_test.txt
          git add another_test.txt
          git commit -m "Another commit"

      - name: Test find latest "Prepare release" commit
        id: test-find-prepare-commit
        run: |
          PREPARE_RELEASE_COMMIT=$(git log --grep="prepare release\|Prepare release" -i --pretty=format:"%H" -n 1)
          echo "Found commit: $PREPARE_RELEASE_COMMIT"
          echo "Expected commit: ${{ env.PREPARE_RELEASE_COMMIT }}"
          
          if [ "$PREPARE_RELEASE_COMMIT" != "${{ env.PREPARE_RELEASE_COMMIT }}" ]; then
            echo "Test failed: Found commit does not match expected commit"
            exit 1
          fi
          
          echo "Test passed: Found correct 'Prepare release' commit"

      - name: Test case sensitivity
        run: |
          # Create a commit with different case
          echo "case test file" > case_test.txt
          git add case_test.txt
          git commit -m "prepare release v0.99.1"
          LOWERCASE_COMMIT=$(git rev-parse HEAD)
          
          # Test if the search is case-insensitive
          FOUND_COMMIT=$(git log --grep="prepare release\|Prepare release" -i --pretty=format:"%H" -n 1)
          
          if [ "$FOUND_COMMIT" != "$LOWERCASE_COMMIT" ]; then
            echo "Case insensitivity test failed: The latest prepare release commit was not found"
            exit 1
          fi
          
          echo "Case insensitivity test passed"

      - name: Clean up
        if: always()
        run: |
          git checkout main || true
          git branch -D test-release-branch || true 